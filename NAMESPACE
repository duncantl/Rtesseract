useDynLib(Rtesseract)
# , R_ResultIterator_Confidence)

import(methods)

importFrom("utils", read.table, adist, aspell)
import(graphics)
importFrom("grDevices", "rgb", "colorRampPalette", "col2rgb", "as.raster")
importFrom("stats", dist, median, quantile, density)

#import(RAutoGenRunTime)

export(GetConfidenceColors)

export(getImageLibs, leptonicaVersion)

export(tesseractVersion)

#export(ocr)
export(tesseract)

exportClass(PageIteratorLevel)
export(PageIteratorLevel)

exportClass("TesseractBaseAPI")
exportClasses("Pix", "ResultIterator")
exportClass("TessPDFRenderer")

export(toPDF, toTSV, toHTML, toHOcr, toOSD, toBoxText) # toUNLV,

export(lapply)
exportMethods(lapply)

export(SetImage, Recognize, Init, End, SetVariables)

# We 
# export(GetIterator)
#export(GetText, Confidence, BoundingBox, BoundingBoxes)
#, GetAlternatives)

export(SetRectangle, Clear, ClearAdaptiveClassifier )
export(GetInitLanguages, ReadConfigFile, SetSourceResolution)

export(GetVariables)
export(PrintVariables)

export(IsValidWord)

export(GetDatapath, GetSourceYResolution, GetInputName, SetInputName)


exportMethods(coerce)
exportMethods(plot)

export(leptonicaImageFormats)

export(compareWord, compareWords) # collapse

S3method(plot, ConfusionMatrix)
export(plotSubImage, plotSubsets)
S3method(plotSubImage, matrix)
S3method(plotSubImage, OCRResults)

export(readBoxFile)

export(SetPageSegMode, GetPageSegMode)

#exportClasses("PageSegMode")
exportClasses(PolyBlockType, Orientation, WritingDirection, TextlineOrder, PageSegMode, PageIteratorLevel, ParagraphJustification, OcrEngineMode, StrongScriptDirection)

# Note seen. S4 method.
S3method(plot, TesseractBoxdata)
S3method(plot, OCRResults)

export(GetSmudges, GetCharWidth, GetCharHeight, bboxToDF, orderBBox)

export(GetText, GetConfidences, GetBoxes, GetAlternatives)
exportMethods("GetConfidences", "GetBoxes", "GetAlternatives")

export(GetImageDims, GetImageInfo)
exportMethods(GetImageDims)

S3method(lines, ListOfLineSegments)

if(FALSE) {
     # Don't export yet.
export(GetImage)
export(GetStrips, GetRegions)
}

export(GetImage)
#, GetImage, GetInputImage)
export(GetThresholdedImage)

export(hasRecognized) # rename!

export(SetOutputName)

export(oem)
export("oem<-")

#export(ProcessPages)

export(ClearPersistentCache)




export(PSM_OSD_ONLY, PSM_AUTO_OSD, PSM_AUTO_ONLY, PSM_AUTO, PSM_SINGLE_COLUMN, PSM_SINGLE_BLOCK_VERT_TEXT, PSM_SINGLE_BLOCK, PSM_SINGLE_LINE, PSM_SINGLE_WORD, PSM_CIRCLE_WORD, PSM_SINGLE_CHAR, PSM_SPARSE_TEXT, PSM_SPARSE_TEXT_OSD, PSM_RAW_LINE)

export(RIL_BLOCK, RIL_PARA, RIL_TEXTLINE, RIL_WORD, RIL_SYMBOL)

export(OEM_TESSERACT_ONLY,
#       OEM_LSTM_ONLY, OEM_TESSERACT_LSTM_COMBINED,
       OEM_DEFAULT)


exportMethods("$", "$<-", "[[", "[", "names")

export(nrow, ncol)
exportMethods("nrow", "ncol", "dim")

export(deskew)

export(pixRead, pixWrite)
export(pixAddGray, pixThresholdToValue, pixThresholdToBinary, pixInvert, pixConvertTo8, pixFindSkew ,
       pixCloseGray, pixErodeGray, pixRotate, pixRotateAMGray, pixGetRes, pixGetDims, pixGetPixels,
       pixGetRGBPixels, pixSetPixels, pixSubtract, pixAnd, pixOr, pixXor, pixClone, pixGetInputFormat,
       pixZero, pixGetDepth, pixEqual, pixSetRes,
       pixOpenGray, pixDilateGray, pixOpenBrick, pixCloseBrick, pixErodeBrick, pixDilateBrick)

export(pixFlipTB, pixFlipLR)

export(pixCreate, pixSetDims)
export(pixTranspose)

exportPattern("IFF_.*")

S3method(as.raster, Pix)
S3method(as.raster, PIX)

exportMethods("[<-")

export(findLines, getLines)

export(showPoints)


export(getAvailableLanguages)


export(readMultipageTiff)
export(readPixHeader, readImageInfo)


export(GetFontInfo)
exportMethods(GetFontInfo)


export(getLSTMSymbolChoices)


export(mkSVG2)

export(mkPages)
